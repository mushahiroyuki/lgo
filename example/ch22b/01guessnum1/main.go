// guessnum1 数当てゲーム1  単純版
package main  // メインプログラムは必ずこうする

import (  // 読み込むパッケージ（ライブラリ）の宣言
	"fmt"   // 入出力関連のパッケージ 。Scanln と Printlnを使う
	"strconv"  // 文字列から整数などへの変換。Atoiを使う
) // 複数のパッケージを呼び込む場合は、(...)で指定すると「import」は1個で済む

func main() {
	answer := 4  // :=を使うと型は自動判別してくれる。この場合answerの型はint
	fmt.Print("数当てゲームです。1以上10以下の整数を（半角で）入力してください: ")
	// パッケージfmtの関数Printを使う。パッケージ外に公開する関数は必ず大文字で始まる
	var inp string  // 「var 変数 型」の順。変数には型の「ゼロ値」が入る（この場合は空文字列）
	fmt.Scanln(&inp) // 文字列として読み込み。&はポインタを表す
	// inpの値を書き換えてもらうためにポインタを渡す。詳しくは6章参照
	// Scanlnは読み込んだ単語数（スペースあるいは改行区切り）とエラーを戻すが
	// 今回はどちらも無視するので、結果を変数に代入していない
	// 下で整数に変換できなければエラーになるのでこれで大丈夫
	num, err := strconv.Atoi(inp) // 整数に変換
	if err != nil || num < 1 || 10 < num  {    // 条件を(...)でくくらない
		fmt.Println("1以上10以下の整数ではないので、ハズレです。")		
	} else if num == answer { // else を「}」と同じ行に*必ず*書くことに注意
		fmt.Println("ビンゴ！")
	} else {  // else を「}」と同じ行に*必ず*書くことに注意
		fmt.Println("残念でした。ハズレです。")
	}
}
